<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.dubbo.api.dao.ProjectMapper">
  <resultMap id="BaseResultMap" type="com.dubbo.api.vo.Project">
    <id column="id" jdbcType="INTEGER" property="id" />
    <result column="name" jdbcType="VARCHAR" property="name" />
    <result column="env" jdbcType="INTEGER" property="env" />
    <result column="type" jdbcType="INTEGER" property="type" />
    <result column="descption" jdbcType="VARCHAR" property="descption" />
    <result column="ctime" jdbcType="TIMESTAMP" property="ctime" />
    <result column="update_time" jdbcType="TIMESTAMP" property="updateTime" />
    <result column="user_id" jdbcType="INTEGER" property="userId" />
  </resultMap>
  <sql id="Base_Column_List">
    id, name, env, type, descption, ctime, update_time, user_id
  </sql>

  <select id="getProjectById" parameterType="java.lang.Integer" resultMap="BaseResultMap">
    select
    <include refid="Base_Column_List" />
    from entity_project
    where id = #{id,jdbcType=INTEGER}
  </select>


  <select id="searchProjectList" parameterType="java.lang.String" resultType="java.util.HashMap">
    select tm4.id,tm4.typeId,tm4.typeName,tm4.envId,tm4.envName,tm4.`name` as projectName,DATE_FORMAT(tm4.ctime,'%Y-%m-%d %H:%i:%s') as createTime,DATE_FORMAT(tm4.update_time,'%Y-%m-%d %H:%i:%s') as updateTime,tm4.descption,eu.id as userId,eu.`name` as userName FROM
    (select ep.id,tm3.typeId,tm3.typeName,tm3.envId,tm3.envName,ep.user_id,ep.`name`,ep.ctime,ep.update_time,ep.descption FROM entity_project ep JOIN
    (SELECT tm1.id,tm1.typeId,tm1.typeName,tm2.envId,tm2.envName FROM
    (select ep.id,et.id as typeId,et.name as typeName FROM entity_project ep join entity_type et on ep.type=et.id) tm1 JOIN
    (select ep.id,ee.id as envId, ee.name as envName FROM entity_project ep join entity_env ee on ep.env=ee.id) tm2 on tm1.id=tm2.id) tm3 on ep.id=tm3.id) tm4 JOIN entity_user eu ON tm4.user_id = eu.id
    <where>
      <if test="search != null">
        tm4.name LIKE concat(concat('%',#{search}),'%')
      </if>
    </where>
    ORDER BY update_time DESC
  </select>

  <select id="selectByPrimaryKey" parameterType="java.lang.Integer" resultMap="BaseResultMap">
    select 
    <include refid="Base_Column_List" />
    from entity_project
    where id = #{id,jdbcType=INTEGER}
  </select>

  <select id="filterUserProjectList" parameterType="java.lang.Integer" resultType="java.util.HashMap">
    select tm4.id,tm4.typeId,tm4.typeName,tm4.envId,tm4.envName,tm4.`name` as projectName,DATE_FORMAT(tm4.ctime,'%Y-%m-%d %H:%i:%s') as createTime,DATE_FORMAT(tm4.update_time,'%Y-%m-%d %H:%i:%s') as updateTime,tm4.descption,eu.id as userId,eu.`name` as userName FROM
    (select ep.id,tm3.typeId,tm3.typeName,tm3.envId,tm3.envName,ep.user_id,ep.`name`,ep.ctime,ep.update_time,ep.descption FROM entity_project ep JOIN
    (SELECT tm1.id,tm1.typeId,tm1.typeName,tm2.envId,tm2.envName FROM
    (select ep.id,et.id as typeId,et.name as typeName FROM entity_project ep join entity_type et on ep.type=et.id) tm1 JOIN
    (select ep.id,ee.id as envId, ee.name as envName FROM entity_project ep join entity_env ee on ep.env=ee.id) tm2 on tm1.id=tm2.id) tm3 on ep.id=tm3.id) tm4 JOIN entity_user eu ON tm4.user_id = eu.id
    where
    tm4.user_id=#{userId,jdbcType=INTEGER}
    ORDER BY update_time DESC
  </select>

  <select id="filterTypeProjectList" parameterType="java.lang.Integer" resultType="java.util.HashMap">
    select tm4.id,tm4.typeId,tm4.typeName,tm4.envId,tm4.envName,tm4.`name` as projectName,DATE_FORMAT(tm4.ctime,'%Y-%m-%d %H:%i:%s') as createTime,DATE_FORMAT(tm4.update_time,'%Y-%m-%d %H:%i:%s') as updateTime,tm4.descption,eu.id as userId,eu.`name` as userName FROM
    (select ep.id,tm3.typeId,tm3.typeName,tm3.envId,tm3.envName,ep.user_id,ep.`name`,ep.ctime,ep.update_time,ep.descption FROM entity_project ep JOIN
    (SELECT tm1.id,tm1.typeId,tm1.typeName,tm2.envId,tm2.envName FROM
    (select ep.id,et.id as typeId,et.name as typeName FROM entity_project ep join entity_type et on ep.type=et.id) tm1 JOIN
    (select ep.id,ee.id as envId, ee.name as envName FROM entity_project ep join entity_env ee on ep.env=ee.id) tm2 on tm1.id=tm2.id) tm3 on ep.id=tm3.id) tm4 JOIN entity_user eu ON tm4.user_id = eu.id
    where
    tm4.typeId = #{typeId,jdbcType=INTEGER}
    ORDER BY update_time DESC
  </select>


  <select id="filterEnvProjectList" parameterType="java.lang.Integer" resultType="java.util.HashMap">
    select tm4.id,tm4.typeId,tm4.typeName,tm4.envId,tm4.envName,tm4.`name` as projectName,DATE_FORMAT(tm4.ctime,'%Y-%m-%d %H:%i:%s') as createTime,DATE_FORMAT(tm4.update_time,'%Y-%m-%d %H:%i:%s') as updateTime,tm4.descption,eu.id as userId,eu.`name` as userName FROM
    (select ep.id,tm3.typeId,tm3.typeName,tm3.envId,tm3.envName,ep.user_id,ep.`name`,ep.ctime,ep.update_time,ep.descption FROM entity_project ep JOIN
    (SELECT tm1.id,tm1.typeId,tm1.typeName,tm2.envId,tm2.envName FROM
    (select ep.id,et.id as typeId,et.name as typeName FROM entity_project ep join entity_type et on ep.type=et.id) tm1 JOIN
    (select ep.id,ee.id as envId, ee.name as envName FROM entity_project ep join entity_env ee on ep.env=ee.id) tm2 on tm1.id=tm2.id) tm3 on ep.id=tm3.id) tm4 JOIN entity_user eu ON tm4.user_id = eu.id
    where
    tm4.envId = #{envId,jdbcType=INTEGER}
    ORDER BY update_time DESC
  </select>


  <select id="filterUserAndEnvProjectList" parameterType="java.lang.Integer" resultType="java.util.HashMap">
    select tm4.id,tm4.typeId,tm4.typeName,tm4.envId,tm4.envName,tm4.`name` as projectName,DATE_FORMAT(tm4.ctime,'%Y-%m-%d %H:%i:%s') as createTime,DATE_FORMAT(tm4.update_time,'%Y-%m-%d %H:%i:%s') as updateTime,tm4.descption,eu.id as userId,eu.`name` as userName FROM
    (select ep.id,tm3.typeId,tm3.typeName,tm3.envId,tm3.envName,ep.user_id,ep.`name`,ep.ctime,ep.update_time,ep.descption FROM entity_project ep JOIN
    (SELECT tm1.id,tm1.typeId,tm1.typeName,tm2.envId,tm2.envName FROM
    (select ep.id,et.id as typeId,et.name as typeName FROM entity_project ep join entity_type et on ep.type=et.id) tm1 JOIN
    (select ep.id,ee.id as envId, ee.name as envName FROM entity_project ep join entity_env ee on ep.env=ee.id) tm2 on tm1.id=tm2.id) tm3 on ep.id=tm3.id) tm4 JOIN entity_user eu ON tm4.user_id = eu.id
    where
    tm4.envId = #{envId,jdbcType=INTEGER}
    and tm4.user_id=#{userId,jdbcType=INTEGER}
    ORDER BY update_time DESC
  </select>


  <select id="filterUserAndTypeProjectList" parameterType="java.lang.Integer" resultType="java.util.HashMap">
    select tm4.id,tm4.typeId,tm4.typeName,tm4.envId,tm4.envName,tm4.`name` as projectName,DATE_FORMAT(tm4.ctime,'%Y-%m-%d %H:%i:%s') as createTime,DATE_FORMAT(tm4.update_time,'%Y-%m-%d %H:%i:%s') as updateTime,tm4.descption,eu.id as userId,eu.`name` as userName FROM
    (select ep.id,tm3.typeId,tm3.typeName,tm3.envId,tm3.envName,ep.user_id,ep.`name`,ep.ctime,ep.update_time,ep.descption FROM entity_project ep JOIN
    (SELECT tm1.id,tm1.typeId,tm1.typeName,tm2.envId,tm2.envName FROM
    (select ep.id,et.id as typeId,et.name as typeName FROM entity_project ep join entity_type et on ep.type=et.id) tm1 JOIN
    (select ep.id,ee.id as envId, ee.name as envName FROM entity_project ep join entity_env ee on ep.env=ee.id) tm2 on tm1.id=tm2.id) tm3 on ep.id=tm3.id) tm4 JOIN entity_user eu ON tm4.user_id = eu.id
    where
    tm4.typeId = #{typeId,jdbcType=INTEGER}
    and tm4.user_id=#{userId,jdbcType=INTEGER}
    ORDER BY update_time DESC
  </select>

  <select id="filterEnvAndTypeProjectList" parameterType="java.lang.Integer" resultType="java.util.HashMap">
    select tm4.id,tm4.typeId,tm4.typeName,tm4.envId,tm4.envName,tm4.`name` as projectName,DATE_FORMAT(tm4.ctime,'%Y-%m-%d %H:%i:%s') as createTime,DATE_FORMAT(tm4.update_time,'%Y-%m-%d %H:%i:%s') as updateTime,tm4.descption,eu.id as userId,eu.`name` as userName FROM
    (select ep.id,tm3.typeId,tm3.typeName,tm3.envId,tm3.envName,ep.user_id,ep.`name`,ep.ctime,ep.update_time,ep.descption FROM entity_project ep JOIN
    (SELECT tm1.id,tm1.typeId,tm1.typeName,tm2.envId,tm2.envName FROM
    (select ep.id,et.id as typeId,et.name as typeName FROM entity_project ep join entity_type et on ep.type=et.id) tm1 JOIN
    (select ep.id,ee.id as envId, ee.name as envName FROM entity_project ep join entity_env ee on ep.env=ee.id) tm2 on tm1.id=tm2.id) tm3 on ep.id=tm3.id) tm4 JOIN entity_user eu ON tm4.user_id = eu.id
    where
    tm4.typeId = #{typeId,jdbcType=INTEGER}
    and tm4.envId = #{envId,jdbcType=INTEGER}
    ORDER BY update_time DESC
  </select>


  <select id="filterPorject" parameterType="java.lang.Integer" resultType="java.util.HashMap">
     select tm4.id,tm4.typeId,tm4.typeName,tm4.envId,tm4.envName,tm4.`name` as projectName,DATE_FORMAT(tm4.ctime,'%Y-%m-%d %H:%i:%s') as createTime,DATE_FORMAT(tm4.update_time,'%Y-%m-%d %H:%i:%s') as updateTime,tm4.descption,eu.id as userId,eu.`name` as userName FROM
      (select ep.id,tm3.typeId,tm3.typeName,tm3.envId,tm3.envName,ep.user_id,ep.`name`,ep.ctime,ep.update_time,ep.descption FROM entity_project ep JOIN
      (SELECT tm1.id,tm1.typeId,tm1.typeName,tm2.envId,tm2.envName FROM
      (select ep.id,et.id as typeId,et.name as typeName FROM entity_project ep join entity_type et on ep.type=et.id) tm1 JOIN
      (select ep.id,ee.id as envId, ee.name as envName FROM entity_project ep join entity_env ee on ep.env=ee.id) tm2 on tm1.id=tm2.id) tm3 on ep.id=tm3.id) tm4 JOIN entity_user eu ON tm4.user_id = eu.id
    where tm4.typeId = #{typeId,jdbcType=INTEGER}
    and tm4.envId = #{envId,jdbcType=INTEGER}
    and tm4.user_id=#{userId,jdbcType=INTEGER}
    ORDER BY update_time DESC
  </select>

  <select id="projectList" resultType="java.util.HashMap">
    select tm4.id,tm4.typeId,tm4.typeName,tm4.envId,tm4.envName,tm4.`name` as projectName,DATE_FORMAT(tm4.ctime,'%Y-%m-%d %H:%i:%s') as createTime,DATE_FORMAT(tm4.update_time,'%Y-%m-%d %H:%i:%s') as updateTime,tm4.descption,eu.id as userId,eu.`name` as userName FROM
      (select ep.id,tm3.typeId,tm3.typeName,tm3.envId,tm3.envName,ep.user_id,ep.`name`,ep.ctime,ep.update_time,ep.descption FROM entity_project ep JOIN
      (SELECT tm1.id,tm1.typeId,tm1.typeName,tm2.envId,tm2.envName FROM
      (select ep.id,et.id as typeId,et.name as typeName FROM entity_project ep join entity_type et on ep.type=et.id) tm1 JOIN
      (select ep.id,ee.id as envId, ee.name as envName FROM entity_project ep join entity_env ee on ep.env=ee.id) tm2 on tm1.id=tm2.id) tm3 on ep.id=tm3.id) tm4 JOIN entity_user eu ON tm4.user_id = eu.id
    ORDER BY update_time DESC
  </select>

  <delete id="deleteByPrimaryKey" parameterType="java.lang.Integer">
    delete from entity_project
    where id = #{id,jdbcType=INTEGER}
  </delete>
  <insert id="insert" parameterType="com.dubbo.api.vo.Project">
    insert into entity_project (id, name, env, 
      type, descption, ctime, 
      update_time, user_id)
    values (#{id,jdbcType=INTEGER}, #{name,jdbcType=VARCHAR}, #{env,jdbcType=INTEGER}, 
      #{type,jdbcType=INTEGER}, #{descption,jdbcType=VARCHAR}, #{ctime,jdbcType=TIMESTAMP}, 
      #{updateTime,jdbcType=TIMESTAMP}, #{userId,jdbcType=INTEGER})
  </insert>
  <insert id="insertSelective" parameterType="com.dubbo.api.vo.Project">
    insert into entity_project
    <trim prefix="(" suffix=")" suffixOverrides=",">
      <if test="id != null">
        id,
      </if>
      <if test="name != null">
        name,
      </if>
      <if test="env != null">
        env,
      </if>
      <if test="type != null">
        type,
      </if>
      <if test="descption != null">
        descption,
      </if>
      <if test="ctime != null">
        ctime,
      </if>
      <if test="updateTime != null">
        update_time,
      </if>
      <if test="userId != null">
        user_id,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides=",">
      <if test="id != null">
        #{id,jdbcType=INTEGER},
      </if>
      <if test="name != null">
        #{name,jdbcType=VARCHAR},
      </if>
      <if test="env != null">
        #{env,jdbcType=INTEGER},
      </if>
      <if test="type != null">
        #{type,jdbcType=INTEGER},
      </if>
      <if test="descption != null">
        #{descption,jdbcType=VARCHAR},
      </if>
      <if test="ctime != null">
        #{ctime,jdbcType=TIMESTAMP},
      </if>
      <if test="updateTime != null">
        #{updateTime,jdbcType=TIMESTAMP},
      </if>
      <if test="userId != null">
        #{userId,jdbcType=INTEGER},
      </if>
    </trim>
  </insert>
  <update id="updateByPrimaryKeySelective" parameterType="com.dubbo.api.vo.Project">
    update entity_project
    <set>
      <if test="name != null">
        name = #{name,jdbcType=VARCHAR},
      </if>
      <if test="env != null">
        env = #{env,jdbcType=INTEGER},
      </if>
      <if test="type != null">
        type = #{type,jdbcType=INTEGER},
      </if>
      <if test="descption != null">
        descption = #{descption,jdbcType=VARCHAR},
      </if>
      <if test="ctime != null">
        ctime = #{ctime,jdbcType=TIMESTAMP},
      </if>
      <if test="updateTime != null">
        update_time = #{updateTime,jdbcType=TIMESTAMP},
      </if>
      <if test="userId != null">
        user_id = #{userId,jdbcType=INTEGER},
      </if>
    </set>
    where id = #{id,jdbcType=INTEGER}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.dubbo.api.vo.Project">
    update entity_project
    set name = #{name,jdbcType=VARCHAR},
      env = #{env,jdbcType=INTEGER},
      type = #{type,jdbcType=INTEGER},
      descption = #{descption,jdbcType=VARCHAR},
      ctime = #{ctime,jdbcType=TIMESTAMP},
      update_time = #{updateTime,jdbcType=TIMESTAMP},
      user_id = #{userId,jdbcType=INTEGER}
    where id = #{id,jdbcType=INTEGER}
  </update>
</mapper>