<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.dubbo.api.dao.HistoryMapper">
  <resultMap id="BaseResultMap" type="com.dubbo.api.vo.History">
    <id column="id" jdbcType="INTEGER" property="id" />
    <result column="create_time" jdbcType="TIMESTAMP" property="createTime" />
    <result column="md5" jdbcType="VARCHAR" property="md5" />
    <result column="status" jdbcType="VARCHAR" property="status" />
    <result column="script_id" jdbcType="INTEGER" property="scriptId" />
    <result column="user_id" jdbcType="INTEGER" property="userId" />
  </resultMap>
  <sql id="Base_Column_List">
    id, create_time, md5, status, script_id, user_id
  </sql>
  <select id="listHistory" resultType="java.util.HashMap">
  select eh.id,eh.script_id as scriptId,eh.create_time as createTime,eh.md5,eh.status,eh.user_name as userName,tmp.history_name as scriptName,tmp.project_name as projectName FROM (SELECT eh.id,eh.script_id,eh.create_time,eh.md5,eh.status,eu.name as user_name FROM entity_history eh JOIN entity_user eu on eh.user_id = eu.id) eh JOIN
  (select es.id,es.name as history_name,ep.name as project_name FROM entity_script es JOIN entity_project ep on es.project_id = ep.id) tmp on eh.script_id=tmp.id
    ORDER BY create_time DESC
  </select>

  <select id="listHistoryByScriptId" parameterType="java.lang.Integer" resultType="java.util.HashMap">
   select eh.id,eh.script_id as scriptId,eh.create_time as createTime,eh.md5,eh.status,eh.user_name as userName,tmp.history_name as scriptName,tmp.project_name as projectName FROM (SELECT eh.id,eh.script_id,eh.create_time,eh.md5,eh.status,eu.name as user_name FROM entity_history eh JOIN entity_user eu on eh.user_id = eu.id) eh JOIN
  (select es.id,es.name as history_name,ep.name as project_name FROM entity_script es JOIN entity_project ep on es.project_id = ep.id) tmp on eh.script_id=tmp.id
   where eh.script_id = #{scriptId,jdbcType=INTEGER}
    ORDER BY eh.create_time DESC
  </select>

  <select id="searchScriptByKeyWord" parameterType="java.lang.String" resultType="java.util.HashMap">
    select eh.id,eh.script_id as scriptId,eh.create_time as createTime,eh.md5,eh.status,eh.user_name as userName,tmp.history_name as scriptName,tmp.update_time,tmp.project_name as projectName FROM (SELECT eh.id,eh.script_id,eh.create_time,eh.md5,eh.status,eu.name as user_name FROM entity_history eh JOIN entity_user eu on eh.user_id = eu.id) eh JOIN
    (select es.id,es.update_time,es.name as history_name,ep.name as project_name FROM entity_script es JOIN entity_project ep on es.project_id = ep.id) tmp on eh.script_id=tmp.id
    <where>
      history_name LIKE concat(concat('%',#{keyword}),'%')
    </where>
    ORDER BY update_time DESC
  </select>

  <select id="selectByPrimaryKey" parameterType="java.lang.Integer" resultMap="BaseResultMap">
    select 
    <include refid="Base_Column_List" />
    from entity_history
    where id = #{id,jdbcType=INTEGER}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Integer">
    delete from entity_history
    where id = #{id,jdbcType=INTEGER}
  </delete>
  <insert id="insert" parameterType="com.dubbo.api.vo.History">
    insert into entity_history (id, create_time, md5, 
      status, script_id, user_id
      )
    values (#{id,jdbcType=INTEGER}, #{createTime,jdbcType=TIMESTAMP}, #{md5,jdbcType=VARCHAR}, 
      #{status,jdbcType=VARCHAR}, #{scriptId,jdbcType=INTEGER}, #{userId,jdbcType=INTEGER}
      )
  </insert>
  <insert id="insertSelective" parameterType="com.dubbo.api.vo.History">
    insert into entity_history
    <trim prefix="(" suffix=")" suffixOverrides=",">
      <if test="id != null">
        id,
      </if>
      <if test="createTime != null">
        create_time,
      </if>
      <if test="md5 != null">
        md5,
      </if>
      <if test="status != null">
        status,
      </if>
      <if test="scriptId != null">
        script_id,
      </if>
      <if test="userId != null">
        user_id,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides=",">
      <if test="id != null">
        #{id,jdbcType=INTEGER},
      </if>
      <if test="createTime != null">
        #{createTime,jdbcType=TIMESTAMP},
      </if>
      <if test="md5 != null">
        #{md5,jdbcType=VARCHAR},
      </if>
      <if test="status != null">
        #{status,jdbcType=VARCHAR},
      </if>
      <if test="scriptId != null">
        #{scriptId,jdbcType=INTEGER},
      </if>
      <if test="userId != null">
        #{userId,jdbcType=INTEGER},
      </if>
    </trim>
  </insert>
  <update id="updateByPrimaryKeySelective" parameterType="com.dubbo.api.vo.History">
    update entity_history
    <set>
      <if test="createTime != null">
        create_time = #{createTime,jdbcType=TIMESTAMP},
      </if>
      <if test="md5 != null">
        md5 = #{md5,jdbcType=VARCHAR},
      </if>
      <if test="status != null">
        status = #{status,jdbcType=VARCHAR},
      </if>
      <if test="scriptId != null">
        script_id = #{scriptId,jdbcType=INTEGER},
      </if>
      <if test="userId != null">
        user_id = #{userId,jdbcType=INTEGER},
      </if>
    </set>
    where id = #{id,jdbcType=INTEGER}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.dubbo.api.vo.History">
    update entity_history
    set create_time = #{createTime,jdbcType=TIMESTAMP},
      md5 = #{md5,jdbcType=VARCHAR},
      status = #{status,jdbcType=VARCHAR},
      script_id = #{scriptId,jdbcType=INTEGER},
      user_id = #{userId,jdbcType=INTEGER}
    where id = #{id,jdbcType=INTEGER}
  </update>
</mapper>